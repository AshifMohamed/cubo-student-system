// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Models;

namespace ServerApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20181204055032_AddJoinedDate")]
    partial class AddJoinedDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ServerApp.Models.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CourseName");

                    b.HasKey("CourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ServerApp.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserImage");

                    b.HasKey("ImageId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("ServerApp.Models.Lecturer", b =>
                {
                    b.Property<int>("LecturerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LecturerCourse");

                    b.Property<string>("LecturerFirstName");

                    b.Property<int>("LecturerImage");

                    b.Property<string>("LecturerLastName");

                    b.Property<double>("LecturerSalary");

                    b.Property<string>("UserName");

                    b.HasKey("LecturerId");

                    b.HasIndex("LecturerCourse");

                    b.HasIndex("LecturerImage");

                    b.HasIndex("UserName");

                    b.ToTable("Lecturer");
                });

            modelBuilder.Entity("ServerApp.Models.Student", b =>
                {
                    b.Property<string>("StudentId");

                    b.Property<string>("StudentCourse");

                    b.Property<string>("StudentFirstName");

                    b.Property<int>("StudentImage");

                    b.Property<string>("StudentLastName");

                    b.Property<string>("joinedYear");

                    b.HasKey("StudentId");

                    b.HasIndex("StudentCourse");

                    b.HasIndex("StudentImage");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ServerApp.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.HasKey("UserName");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ServerApp.Models.Lecturer", b =>
                {
                    b.HasOne("ServerApp.Models.Course", "Course")
                        .WithMany("Lecturers")
                        .HasForeignKey("LecturerCourse");

                    b.HasOne("ServerApp.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("LecturerImage")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ServerApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName");
                });

            modelBuilder.Entity("ServerApp.Models.Student", b =>
                {
                    b.HasOne("ServerApp.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("StudentCourse");

                    b.HasOne("ServerApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ServerApp.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("StudentImage")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
